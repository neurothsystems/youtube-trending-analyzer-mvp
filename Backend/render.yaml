# Render Blueprint for YouTube Trending Analyzer MVP Backend
# Deploy with: https://dashboard.render.com/blueprints

services:
  # FastAPI Backend Service
  - type: web
    name: youtube-trending-analyzer-api
    runtime: python3
    plan: starter  # Can upgrade to standard later
    buildCommand: |
      cd backend && 
      pip install --upgrade pip &&
      pip install -r requirements.txt
    startCommand: |
      cd backend && 
      uvicorn app.main:app --host 0.0.0.0 --port $PORT
    envVars:
      # Application Settings
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: PROJECT_NAME
        value: YouTube Trending Analyzer MVP
      - key: VERSION
        value: "1.0.0"
      
      # Secret Key (generate a secure random key)
      - key: SECRET_KEY
        generateValue: true
      
      # Database URL (will be populated by Render PostgreSQL)
      - key: DATABASE_URL
        fromDatabase:
          name: youtube-trending-db
          property: connectionString
      
      # Redis URL (will be populated by Render Redis)
      - key: REDIS_URL
        fromService:
          type: redis
          name: youtube-trending-cache
          property: connectionString
      
      # API Keys (set these in Render dashboard)
      - key: YOUTUBE_API_KEY
        sync: false  # Set manually in dashboard
      - key: GEMINI_API_KEY
        sync: false  # Set manually in dashboard
      
      # LLM Configuration
      - key: LLM_PROVIDER
        value: gemini-flash
      - key: LLM_BATCH_SIZE
        value: "20"
      - key: LLM_TIMEOUT
        value: "30"
      - key: LLM_MONTHLY_BUDGET
        value: "50.0"
      
      # Cache Settings (Budget Optimized)
      - key: CACHE_TTL_SEARCH
        value: "7200"    # 2 hours
      - key: CACHE_TTL_VIDEO
        value: "86400"   # 24 hours
      - key: CACHE_TTL_TRENDING
        value: "3600"    # 1 hour
      
      # Background Jobs
      - key: TRENDING_CRAWL_INTERVAL
        value: "2"  # hours
      - key: LLM_ANALYSIS_INTERVAL
        value: "6"  # hours
      
      # YouTube API Limits
      - key: YOUTUBE_MAX_RESULTS
        value: "50"
      - key: YOUTUBE_MAX_COMMENTS
        value: "50"
      
      # Performance Settings
      - key: MAX_RESPONSE_TIME
        value: "5.0"
      - key: TARGET_CACHE_HIT_RATE
        value: "0.70"
      
      # CORS Settings
      - key: ALLOWED_HOSTS
        value: "youtube-trending-analyzer-api.onrender.com,localhost,127.0.0.1"

    # Health check endpoint
    healthCheckPath: /api/mvp/health/live
    
    # Auto-deploy on git push
    autoDeploy: true

  # Redis Cache Service
  - type: redis
    name: youtube-trending-cache
    plan: starter  # Free tier available
    maxmemoryPolicy: allkeys-lru  # Evict least recently used keys when memory full

# PostgreSQL Database
databases:
  - name: youtube-trending-db
    databaseName: yttrends
    plan: starter  # Free tier available
    
    # Database initialization (optional)
    # postCreateCommand: |
    #   cd backend &&
    #   python -c "
    #   from app.core.database import create_tables;
    #   create_tables()
    #   "

# Environment Groups (for shared configuration)
envVarGroups:
  - name: youtube-trending-shared
    envVars:
      # Shared configuration that doesn't change between environments
      - key: SUPPORTED_COUNTRIES
        value: "DE,US,FR,JP"
      - key: SUPPORTED_TIMEFRAMES  
        value: "24h,48h,7d"
      - key: LOG_LEVEL
        value: INFO